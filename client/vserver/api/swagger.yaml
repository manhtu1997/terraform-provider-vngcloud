---
swagger: "2.0"
info:
  description: "Api Documentation"
  version: "1.0"
  title: "Api Documentation"
  termsOfService: "urn:tos"
  contact: {}
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0"
host: "api.vngcloud.tech"
basePath: "/"
tags:
- name: "flavor-rest-controller"
  description: "Flavor Rest Controller"
- name: "flavor-zone-rest-controller"
  description: "Flavor Zone Rest Controller"
- name: "image-rest-controller"
  description: "Image Rest Controller"
- name: "network-acl-rest-controller"
  description: "Network Acl Rest Controller"
- name: "network-rest-controller"
  description: "Network Rest Controller"
- name: "project-rest-controller"
  description: "Project Rest Controller"
- name: "quota-rest-controller"
  description: "Quota Rest Controller"
- name: "route-table-controller"
  description: "Route Table Controller"
- name: "secgroup-rest-controller"
  description: "Secgroup Rest Controller"
- name: "secgroup-rule-rest-controller"
  description: "Secgroup Rule Rest Controller"
- name: "server-group-rest-controller"
  description: "Server Group Rest Controller"
- name: "server-rest-controller"
  description: "Server Rest Controller"
- name: "ssh-key-rest-controller"
  description: "SSH Key Rest Controller"
- name: "subnet-rest-controller"
  description: "Subnet Rest Controller"
- name: "volume-rest-controller"
  description: "Volume Rest Controller"
- name: "volume-type-rest-controller"
  description: "Volume Type Rest Controller"
- name: "volume-type-zone-rest-controller"
  description: "Volume Type Zone Rest Controller"
paths:
  /v1/projects:
    get:
      tags:
      - "project-rest-controller"
      summary: "listProject"
      operationId: "listProjectUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ProjectResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/projects/{project_id}:
    get:
      tags:
      - "project-rest-controller"
      summary: "getProject"
      operationId: "getProjectUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ProjectResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/flavor_zones:
    get:
      tags:
      - "flavor-zone-rest-controller"
      summary: "listFlavorZone"
      operationId: "listFlavorZoneUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FlavorZoneResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/flavor_zones/{flavor_zone_id}:
    get:
      tags:
      - "flavor-zone-rest-controller"
      summary: "getFlavorZone"
      operationId: "getFlavorZoneUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "flavor_zone_id"
        in: "path"
        description: "flavor_zone_id"
        required: true
        type: "string"
        x-exportParamName: "FlavorZoneId"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FlavorZoneResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/flavors/{flavor_id}:
    get:
      tags:
      - "flavor-rest-controller"
      summary: "getFlavor"
      operationId: "getFlavorUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "flavor_id"
        in: "path"
        description: "flavor_id"
        required: true
        type: "string"
        x-exportParamName: "FlavorId"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FlavorResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/images/os:
    get:
      tags:
      - "image-rest-controller"
      summary: "listOSImage"
      operationId: "listOSImageUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OSImageBaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/networks:
    get:
      tags:
      - "network-rest-controller"
      summary: "listNetwork"
      operationId: "listNetworkUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "network-rest-controller"
      summary: "createNetwork"
      operationId: "createNetworkUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createNetworkRequest"
        description: "createNetworkRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateNetworkRequest"
        x-exportParamName: "CreateNetworkRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "network-rest-controller"
      summary: "editNetwork"
      operationId: "editNetworkUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateNetworkRequest"
        description: "updateNetworkRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateNetworkRequest"
        x-exportParamName: "UpdateNetworkRequest"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "network-rest-controller"
      summary: "deleteNetwork"
      operationId: "deleteNetworkUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteNetworkRequest"
        description: "deleteNetworkRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteNetworkRequest"
        x-exportParamName: "DeleteNetworkRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/networks/{network_id}:
    get:
      tags:
      - "network-rest-controller"
      summary: "getNetwork"
      operationId: "getNetworkUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "network_id"
        in: "path"
        description: "network_id"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/policies:
    get:
      tags:
      - "network-acl-rest-controller"
      summary: "List network-acl"
      operationId: "listNetworkAclUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAclListResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "network-acl-rest-controller"
      summary: "Create network-acl"
      operationId: "createNetworkAclUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createNetworkAclRequest"
        description: "createNetworkAclRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateNetworkAclRequest"
        x-exportParamName: "CreateNetworkAclRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAclResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/policies/{uuid}:
    get:
      tags:
      - "network-acl-rest-controller"
      summary: "Get network-acl by uuid"
      operationId: "getNetworkAclUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "uuid"
        in: "path"
        description: "The network-acl uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAclResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "network-acl-rest-controller"
      summary: "Delete Network-acl"
      operationId: "deleteNetworkAclUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "uuid"
        in: "path"
        description: "The network-acl uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/policies/{uuid}/rules:
    put:
      tags:
      - "network-acl-rest-controller"
      summary: "Update Inbound/Outbound Rules of Network-acl"
      operationId: "updateRulesUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateAclRulesRequest"
        description: "updateAclRulesRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateNetworkAclRulesRequest"
        x-exportParamName: "UpdateAclRulesRequest"
      - name: "uuid"
        in: "path"
        description: "The network-acl uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAclResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/policies/{uuid}/subnets:
    put:
      tags:
      - "network-acl-rest-controller"
      summary: "Update ACL Rule of Network-acl"
      operationId: "updateAssociatedSubnetsUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateSubnetsRequest"
        description: "updateSubnetsRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateNetworkAclSubnetsRequest"
        x-exportParamName: "UpdateSubnetsRequest"
      - name: "uuid"
        in: "path"
        description: "The network-acl uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAclResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/quota:
    get:
      tags:
      - "quota-rest-controller"
      summary: "list"
      operationId: "listUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InterfaceProjectQuotaResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "quota-rest-controller"
      summary: "update"
      operationId: "updateUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateQuotaVsgRequest"
        description: "updateQuotaVsgRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateQuotaVsgRequest"
        x-exportParamName: "UpdateQuotaVsgRequest"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InterfaceProjectQuotaResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/quota/init-used:
    put:
      tags:
      - "quota-rest-controller"
      summary: "initUsed"
      operationId: "initUsedUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InterfaceProjectQuotaResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/quota/user/{user_id}:
    get:
      tags:
      - "quota-rest-controller"
      summary: "listByUser"
      operationId: "listByUserUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "user_id"
        in: "path"
        description: "user_id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InterfaceProjectQuotaResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/quote-used:
    get:
      tags:
      - "quota-rest-controller"
      summary: "listQuotaUsed"
      operationId: "listQuotaUsedUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/QuotaResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/route-table:
    get:
      tags:
      - "route-table-controller"
      summary: "List route-tables"
      operationId: "listRouteTablesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ListRouteTablesResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "route-table-controller"
      summary: "Create route-table"
      operationId: "createRouteTableUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createRouteTableRequest"
        description: "createRouteTableRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateRouteTableRequest"
        x-exportParamName: "CreateRouteTableRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "route-table-controller"
      summary: "Delete all route-tables"
      operationId: "deleteRouteTablesUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/route-table/{uuid}:
    get:
      tags:
      - "route-table-controller"
      summary: "Get route-table by uuid"
      operationId: "getRouteTableUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "uuid"
        in: "path"
        description: "The route-table uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RouteTableResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "route-table-controller"
      summary: "Delete Route Table"
      operationId: "deleteRouteTableUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "uuid"
        in: "path"
        description: "The route-table uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/route-table/{uuid}/routes:
    put:
      tags:
      - "route-table-controller"
      summary: "Add/remove routes of route-table"
      operationId: "updateRouteTableRoutesUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateRouteRequest"
        description: "updateRouteRequest"
        required: true
        schema:
          $ref: "#/definitions/RouteTableUpdateRouteRequest"
        x-exportParamName: "UpdateRouteRequest"
      - name: "uuid"
        in: "path"
        description: "The route-table uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RouteTableResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/route-table/{uuid}/subnets:
    put:
      tags:
      - "route-table-controller"
      summary: "Add/remove subnets of route-table"
      operationId: "updateRouteTableSubnetsUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateSubnetRequest"
        description: "updateSubnetRequest"
        required: true
        schema:
          $ref: "#/definitions/RouteTableUpdateSubnetRequest"
        x-exportParamName: "UpdateSubnetRequest"
      - name: "uuid"
        in: "path"
        description: "The route-table uuid"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RouteTableResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/secgroup-rules:
    post:
      tags:
      - "secgroup-rule-rest-controller"
      summary: "createSecgroupRule"
      operationId: "createSecgroupRuleUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createSecurityGroupRuleRequest"
        description: "createSecurityGroupRuleRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateSecurityGroupRuleRequest"
        x-exportParamName: "CreateSecurityGroupRuleRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupRuleResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "secgroup-rule-rest-controller"
      summary: "deleteSecgroupRule"
      operationId: "deleteSecgroupRuleUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteSecurityGroupRuleRequest"
        description: "deleteSecurityGroupRuleRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteSecurityGroupRuleRequest"
        x-exportParamName: "DeleteSecurityGroupRuleRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/secgroup-rules/secgroup-ids/{secgroup_id}:
    get:
      tags:
      - "secgroup-rule-rest-controller"
      summary: "listSecgroupRuleBySecgroup"
      operationId: "listSecgroupRuleBySecgroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "secgroup_id"
        in: "path"
        description: "secgroup_id"
        required: true
        type: "string"
        x-exportParamName: "SecgroupId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupRuleResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/secgroup-rules/{secgroup_rule_id}:
    get:
      tags:
      - "secgroup-rule-rest-controller"
      summary: "getSecgroupRule"
      operationId: "getSecgroupRuleUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "secgroup_rule_id"
        in: "path"
        description: "secgroup_rule_id"
        required: true
        type: "string"
        x-exportParamName: "SecgroupRuleId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupRuleResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/secgroups:
    get:
      tags:
      - "secgroup-rest-controller"
      summary: "listSecgroup"
      operationId: "listSecgroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "secgroup-rest-controller"
      summary: "createSecgroup"
      operationId: "createSecgroupUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createSecurityGroupRequest"
        description: "createSecurityGroupRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateSecurityGroupRequest"
        x-exportParamName: "CreateSecurityGroupRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "secgroup-rest-controller"
      summary: "editSecgroup"
      operationId: "editSecgroupUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "editSecurityGroupRequest"
        description: "editSecurityGroupRequest"
        required: true
        schema:
          $ref: "#/definitions/EditSecurityGroupRequest"
        x-exportParamName: "EditSecurityGroupRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "secgroup-rest-controller"
      summary: "deleteSecgroup"
      operationId: "deleteSecgroupUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteSecurityGroupRequest"
        description: "deleteSecurityGroupRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteSecurityGroupRequest"
        x-exportParamName: "DeleteSecurityGroupRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/secgroups/vm-ids/{vm_id}:
    get:
      tags:
      - "secgroup-rest-controller"
      summary: "listSecgroupByInstance"
      operationId: "listSecgroupByInstanceUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "vm_id"
        in: "path"
        description: "vm_id"
        required: true
        type: "string"
        x-exportParamName: "VmId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/secgroups/{secgroup_id}:
    get:
      tags:
      - "secgroup-rest-controller"
      summary: "getSecgroup"
      operationId: "getSecgroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "secgroup_id"
        in: "path"
        description: "secgroup_id"
        required: true
        type: "string"
        x-exportParamName: "SecgroupId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SecgroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/server-groups:
    get:
      tags:
      - "server-group-rest-controller"
      summary: "List server group"
      operationId: "listServerGroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerGroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "server-group-rest-controller"
      summary: "Create server group"
      operationId: "createServerGroupUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createServerGroupRequest"
        description: "createServerGroupRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateServerGroupRequest"
        x-exportParamName: "CreateServerGroupRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerGroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "server-group-rest-controller"
      summary: "Delete server group"
      operationId: "deleteServerGroupUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteServerRequest"
        description: "deleteServerRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteServerGroupRequest"
        x-exportParamName: "DeleteServerRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerGroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/server-groups/policies:
    get:
      tags:
      - "server-group-rest-controller"
      summary: "List server group policy"
      operationId: "listServerGroupPolicyUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerGroupPolicyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/server-groups/{server_group_id}:
    get:
      tags:
      - "server-group-rest-controller"
      summary: "Get server group"
      operationId: "getServerGroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "server_group_id"
        in: "path"
        description: "The server group id"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerGroupResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers:
    get:
      tags:
      - "server-rest-controller"
      summary: "List server"
      operationId: "listServerUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "server-rest-controller"
      summary: "Create server"
      operationId: "createServerUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createServerRequest"
        description: "createServerRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateServerRequest"
        x-exportParamName: "CreateServerRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "server-rest-controller"
      summary: "Delete Server"
      operationId: "deleteServerUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteServerRequest"
        description: "deleteServerRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteServerRequest"
        x-exportParamName: "DeleteServerRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/servers/reboot:
    put:
      tags:
      - "server-rest-controller"
      summary: "Reboot server"
      operationId: "rebootServerUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateServerRequest"
        description: "updateServerRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateServerRequest"
        x-exportParamName: "UpdateServerRequest"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers/resize:
    put:
      tags:
      - "server-rest-controller"
      summary: "Change flavor of server"
      operationId: "resizeServerUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "resizeServerRequest"
        description: "resizeServerRequest"
        required: true
        schema:
          $ref: "#/definitions/ResizeServerRequest"
        x-exportParamName: "ResizeServerRequest"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers/start:
    put:
      tags:
      - "server-rest-controller"
      summary: "Start server"
      operationId: "startServerUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateServerRequest"
        description: "updateServerRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateServerRequest"
        x-exportParamName: "UpdateServerRequest"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers/stop:
    put:
      tags:
      - "server-rest-controller"
      summary: "Stop server"
      operationId: "stopServerUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "updateServerRequest"
        description: "updateServerRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateServerRequest"
        x-exportParamName: "UpdateServerRequest"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers/update_sec_group:
    put:
      tags:
      - "server-rest-controller"
      summary: "Update SecGroups of server"
      operationId: "updateSecGroupServerUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "changeSecGroupRequest"
        description: "changeSecGroupRequest"
        required: true
        schema:
          $ref: "#/definitions/ChangeSecGroupRequest"
        x-exportParamName: "ChangeSecGroupRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/servers/{server_id}:
    get:
      tags:
      - "server-rest-controller"
      summary: "Get server by id"
      operationId: "getServerUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "server_id"
        in: "path"
        description: "The server id"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ServerResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/ssh_keys:
    get:
      tags:
      - "ssh-key-rest-controller"
      summary: "listSSHKey"
      operationId: "listSSHKeyUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SSHKeyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "ssh-key-rest-controller"
      summary: "createSSHKey"
      operationId: "createSSHKeyUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createSSHKeyRequest"
        description: "createSSHKeyRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateSSHKeyRequest"
        x-exportParamName: "CreateSSHKeyRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SSHKeyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "ssh-key-rest-controller"
      summary: "deleteSSHKey"
      operationId: "deleteSSHKeyUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteRequest"
        description: "deleteRequest"
        required: true
        schema:
          $ref: "#/definitions/SDNSshKeyDeleteRequest"
        x-exportParamName: "DeleteRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SSHKeyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/ssh_keys/import:
    post:
      tags:
      - "ssh-key-rest-controller"
      summary: "importSSHKey"
      operationId: "importSSHKeyUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "importSSHKeyRequest"
        description: "importSSHKeyRequest"
        required: true
        schema:
          $ref: "#/definitions/ImportSSHKeyRequest"
        x-exportParamName: "ImportSSHKeyRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SSHKeyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/ssh_keys/{ssh_key_id}:
    get:
      tags:
      - "ssh-key-rest-controller"
      summary: "getSSHKey"
      operationId: "getSSHKeyUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "ssh_key_id"
        in: "path"
        description: "ssh_key_id"
        required: true
        type: "string"
        x-exportParamName: "SshKeyId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SSHKeyResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/subnets:
    post:
      tags:
      - "subnet-rest-controller"
      summary: "createSubnet"
      operationId: "createSubnetUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createSubnetRequest"
        description: "createSubnetRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateSubnetRequest"
        x-exportParamName: "CreateSubnetRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SubnetResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "subnet-rest-controller"
      summary: "deleteSubnet"
      operationId: "deleteSubnetUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteSubnetRequest"
        description: "deleteSubnetRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteSubnetRequest"
        x-exportParamName: "DeleteSubnetRequest"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BaseResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/subnets/mp-public-interfaces:
    get:
      tags:
      - "subnet-rest-controller"
      summary: "getMpPublicInterface"
      operationId: "getMpPublicInterfaceUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SubnetResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/subnets/networks/{network_id}:
    get:
      tags:
      - "subnet-rest-controller"
      summary: "listSubnetsByNetwork"
      operationId: "listSubnetsByNetworkUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "network_id"
        in: "path"
        description: "network_id"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SubnetResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/subnets/{subnet_id}:
    get:
      tags:
      - "subnet-rest-controller"
      summary: "getSubnet"
      operationId: "getSubnetUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "subnet_id"
        in: "path"
        description: "subnet_id"
        required: true
        type: "string"
        x-exportParamName: "SubnetId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SubnetResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volume_type_zones:
    get:
      tags:
      - "volume-type-zone-rest-controller"
      summary: "listVolumeTypeZone"
      operationId: "listVolumeTypeZoneUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeTypeZoneResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volume_type_zones/{volume_type_zone_id}:
    get:
      tags:
      - "volume-type-zone-rest-controller"
      summary: "getVolumeTypeZone"
      operationId: "getVolumeTypeZoneUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "volume_type_zone_id"
        in: "path"
        description: "volume_type_zone_id"
        required: true
        type: "string"
        x-exportParamName: "VolumeTypeZoneId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeTypeZoneResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volume_types/{volume_type_id}:
    get:
      tags:
      - "volume-type-rest-controller"
      summary: "getVolumeType"
      operationId: "getVolumeTypeUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "volume_type_id"
        in: "path"
        description: "volume_type_id"
        required: true
        type: "string"
        x-exportParamName: "VolumeTypeId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeTypeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volumes:
    get:
      tags:
      - "volume-rest-controller"
      summary: "List volume"
      operationId: "listVolumeUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "volume-rest-controller"
      summary: "Create volume"
      operationId: "createVolumeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "createVolumeRequest"
        description: "createVolumeRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateVolumeRequest"
        x-exportParamName: "CreateVolumeRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "volume-rest-controller"
      summary: "Delete volume"
      operationId: "deleteVolumeUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "deleteVolumeRequest"
        description: "deleteVolumeRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteVolumeRequest"
        x-exportParamName: "DeleteVolumeRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      deprecated: false
  /v1/{project_id}/volumes/attach:
    put:
      tags:
      - "volume-rest-controller"
      summary: "Attach volume into the server"
      operationId: "attachVolumeUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "attachVolumeRequest"
        description: "attachVolumeRequest"
        required: true
        schema:
          $ref: "#/definitions/AttachVolumeRequest"
        x-exportParamName: "AttachVolumeRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volumes/detach:
    put:
      tags:
      - "volume-rest-controller"
      summary: "Detach volume into the server"
      operationId: "detachVolumeUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "detachVolumeRequest"
        description: "detachVolumeRequest"
        required: true
        schema:
          $ref: "#/definitions/DetachVolumeRequest"
        x-exportParamName: "DetachVolumeRequest"
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volumes/resize:
    put:
      tags:
      - "volume-rest-controller"
      summary: "Resize volume"
      operationId: "resizeVolumeUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "resizeVolumeRequest"
        description: "resizeVolumeRequest"
        required: true
        schema:
          $ref: "#/definitions/ResizeVolumeRequest"
        x-exportParamName: "ResizeVolumeRequest"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/volumes/{volume_id}:
    get:
      tags:
      - "volume-rest-controller"
      summary: "Get volume by id"
      operationId: "getVolumeUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "volume_id"
        in: "path"
        description: "The project id"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/{flavor_zone_id}/flavors:
    get:
      tags:
      - "flavor-rest-controller"
      summary: "listFlavor"
      operationId: "listFlavorUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "flavor_zone_id"
        in: "path"
        description: "flavor_zone_id"
        required: true
        type: "string"
        x-exportParamName: "FlavorZoneId"
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FlavorResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
  /v1/{project_id}/{volume_type_zone_id}/volume_types:
    get:
      tags:
      - "volume-type-rest-controller"
      summary: "listVolumeType"
      operationId: "listVolumeTypeUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "project_id"
        in: "path"
        description: "project_id"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "volume_type_zone_id"
        in: "path"
        description: "volume_type_zone_id"
        required: true
        type: "string"
        x-exportParamName: "VolumeTypeZoneId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeTypeResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
      deprecated: false
definitions:
  AclPolicyRule:
    type: "object"
    properties:
      action:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      interfaceAclPolicyUuid:
        type: "string"
      port:
        type: "string"
      protocol:
        type: "string"
      seqNumber:
        type: "string"
      source:
        type: "string"
      type:
        type: "string"
      uuid:
        type: "string"
    title: "AclPolicyRule"
  AttachVolumeRequest:
    type: "object"
    required:
    - "serverId"
    - "volumeId"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverId:
        type: "string"
        example: "ins-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      volumeId:
        type: "string"
        example: "vol-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of volume"
    title: "AttachVolumeRequest"
    description: "Attach Volume Request"
    example:
      volumeId: "vol-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      serverId: "ins-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      userId: 11212
  BaseResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      success:
        type: "boolean"
    title: "BaseResponse"
  ChangeSecGroupRequest:
    type: "object"
    required:
    - "serverId"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      securityGroup:
        type: "array"
        example:
        - "secg-5c1e8e96-d106-4a91-8047-a76d1ae5ba9b"
        description: "Id of the SecGroups"
        items:
          type: "string"
      serverId:
        type: "string"
        example: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "ChangeSecGroupRequest"
    description: "Update Server Request"
    example:
      securityGroup:
      - "secg-5c1e8e96-d106-4a91-8047-a76d1ae5ba9b"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      serverId: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
      userId: 11212
  CreateNetworkAclRequest:
    type: "object"
    required:
    - "name"
    - "vpc"
    properties:
      name:
        type: "string"
        example: "Default"
        description: "Name of The Network Acl table"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      vpc:
        type: "string"
        example: "net-7e9d494c-7127-48c8-8cd9-a954d37dfd65"
        description: "Uuid of The VPC"
    title: "CreateNetworkAclRequest"
    example:
      name: "Default"
      vpc: "net-7e9d494c-7127-48c8-8cd9-a954d37dfd65"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  CreateNetworkRequest:
    type: "object"
    required:
    - "cidr"
    - "name"
    properties:
      cidr:
        type: "string"
        example: "10.2.0.0/16"
        description: "Subnet of Network (/16)."
      extra:
        type: "object"
        properties: {}
      name:
        type: "string"
        example: "Network_01"
        description: "Name of the Network"
      routeTableDefaultId:
        type: "string"
        description: "Id of default route table."
    title: "CreateNetworkRequest"
    description: "Create Network Request"
    example:
      routeTableDefaultId: "routeTableDefaultId"
      extra: "{}"
      name: "Network_01"
      cidr: "10.2.0.0/16"
  CreateRouteTableRequest:
    type: "object"
    required:
    - "name"
    - "vpcUuid"
    properties:
      name:
        type: "string"
        example: "Default"
        description: "Name of The route table"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      vpcUuid:
        type: "string"
        example: "net-7e9d494c-7127-48c8-8cd9-a954d37dfd65"
        description: "Uuid of The VPC"
    title: "CreateRouteTableRequest"
    example:
      name: "Default"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
      vpcUuid: "net-7e9d494c-7127-48c8-8cd9-a954d37dfd65"
  CreateSSHKeyRequest:
    type: "object"
    properties:
      name:
        type: "string"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "CreateSSHKeyRequest"
  CreateSecurityGroupRequest:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "description for secgroup."
      extra:
        type: "object"
        properties: {}
      name:
        type: "string"
        example: "Secgroup_01"
        description: "Name of the Secgroup"
    title: "CreateSecurityGroupRequest"
    example:
      extra: "{}"
      name: "Secgroup_01"
      description: "description"
  CreateSecurityGroupRuleRequest:
    type: "object"
    required:
    - "direction"
    - "ethertype"
    - "portRangeMax"
    - "portRangeMin"
    - "protocol"
    - "remoteIpPrefix"
    - "securityGroupId"
    properties:
      description:
        type: "string"
        description: "description for secgoup rule."
      direction:
        type: "string"
        example: "egress"
        description: "\"ingress\" or \"egress\""
      ethertype:
        type: "string"
        example: "IPv4"
        description: "\"IPV4\" or \"IPv6\""
      portRangeMax:
        type: "integer"
        format: "int32"
        example: 65335
        description: "upper bound of range port."
      portRangeMin:
        type: "integer"
        format: "int32"
        example: 0
        description: "upper bound of range port."
      protocol:
        type: "string"
        example: "TCP"
        description: "\"TCP\", \"UDP\", \"ICMP\", ... "
      remoteIpPrefix:
        type: "string"
        example: "169.60.20.0/24"
        description: "Ip Prefix of source/target."
      securityGroupId:
        type: "string"
        example: "secg-017806c4-112e-46e5-bf12-74d02b86a267"
        description: "Id of security group that rules are attached."
    title: "CreateSecurityGroupRuleRequest"
    example:
      securityGroupId: "secg-017806c4-112e-46e5-bf12-74d02b86a267"
      portRangeMin: 0
      protocol: "TCP"
      ethertype: "IPv4"
      description: "description"
      portRangeMax: 65335
      remoteIpPrefix: "169.60.20.0/24"
      direction: "egress"
  CreateServerGroupRequest:
    type: "object"
    required:
    - "name"
    - "policyId"
    properties:
      description:
        type: "string"
        example: "This is my server group"
        description: "Description of server group"
      name:
        type: "string"
        example: "Group-01"
        description: "Name of the server group"
      policyId:
        type: "string"
        example: "7916f5ac-cff2-11eb-b8bc-0242ac130003"
        description: "Policy id of server group"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "CreateServerGroupRequest"
    description: "Create Server Group Request"
    example:
      policyId: "7916f5ac-cff2-11eb-b8bc-0242ac130003"
      name: "Group-01"
      description: "This is my server group"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  CreateServerRequest:
    type: "object"
    required:
    - "encryptionVolume"
    - "flavorId"
    - "imageId"
    - "name"
    - "networkId"
    - "rootDiskSize"
    - "rootDiskTypeId"
    - "subnetId"
    properties:
      attachFloating:
        type: "boolean"
        example: false
        description: "Attach floating IP"
      encryptionVolume:
        type: "boolean"
        example: false
        description: "Encryption volume"
      expirePassword:
        type: "boolean"
        example: true
        description: "Skip change password: false, else: true"
      flavorId:
        type: "string"
        example: "flav-c41b827e-730a-475f-b181-c0d1c7acc6d4"
        description: "Id of the flavor"
      imageId:
        type: "string"
        example: "img-5c6639ad-8b02-4402-8be4-5bc0c6a57d32"
        description: "Id of the image"
      name:
        type: "string"
        example: "Server_01"
        description: "Name of the server"
      networkId:
        type: "string"
        example: "net-d1314dfd-31ac-4b5f-ad9a-a5a489ecfa5d"
        description: "Id of the network"
      osLicence:
        type: "boolean"
        example: false
        description: "Licence of OS"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      rootDiskEncryptionType:
        type: "string"
        example: "aes-xts-plain64_256"
        description: "Type encryption of boot volume"
      rootDiskSize:
        type: "integer"
        format: "int32"
        example: 20
        description: "Size of boot volume"
      rootDiskTypeId:
        type: "string"
        example: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of boot volume type"
      securityGroup:
        type: "array"
        example:
        - "secg-5c1e8e96-d106-4a91-8047-a76d1ae5ba9b"
        description: "Id of the SecGroups"
        items:
          type: "string"
      serverGroupId:
        type: "string"
        example: "server-group-d4d6a036-1955-4c5f-a40d-e789d26cf49d"
        description: "Server group id"
      sourceType:
        type: "string"
      sshKeyId:
        type: "string"
        example: "SSH_Key"
        description: "Id of SSH key"
      subnetId:
        type: "string"
        example: "sub-b7716e75-10fa-4d18-9987-d68273f49386"
        description: "Id of the subnet"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      userName:
        type: "string"
        example: "stackops"
        description: "name of user"
      userPassword:
        type: "string"
        example: "password"
        description: "password of user"
    title: "CreateServerRequest"
    description: "Create Server Request"
    example:
      subnetId: "sub-b7716e75-10fa-4d18-9987-d68273f49386"
      userPassword: "password"
      imageId: "img-5c6639ad-8b02-4402-8be4-5bc0c6a57d32"
      attachFloating: false
      rootDiskSize: 20
      flavorId: "flav-c41b827e-730a-475f-b181-c0d1c7acc6d4"
      serverGroupId: "server-group-d4d6a036-1955-4c5f-a40d-e789d26cf49d"
      securityGroup:
      - "secg-5c1e8e96-d106-4a91-8047-a76d1ae5ba9b"
      userName: "stackops"
      userId: 11212
      sshKeyId: "SSH_Key"
      osLicence: false
      rootDiskTypeId: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      encryptionVolume: false
      expirePassword: true
      sourceType: "sourceType"
      name: "Server_01"
      rootDiskEncryptionType: "aes-xts-plain64_256"
      networkId: "net-d1314dfd-31ac-4b5f-ad9a-a5a489ecfa5d"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
  CreateSubnetRequest:
    type: "object"
    required:
    - "cidr"
    - "name"
    - "networkId"
    properties:
      cidr:
        type: "string"
        example: "10.2.12.0/24"
        description: "CIDR of Subnet, must be contained in its network."
      extra:
        type: "object"
        properties: {}
      name:
        type: "string"
        example: "Network_01"
        description: "Name of the Subnet"
      networkId:
        type: "string"
        example: "net-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Network."
    title: "CreateSubnetRequest"
    example:
      extra: "{}"
      name: "Network_01"
      cidr: "10.2.12.0/24"
      networkId: "net-e454fde0-de12-4f70-a5e6-2d904b850fa3"
  CreateVolumeRequest:
    type: "object"
    required:
    - "name"
    - "size"
    - "volumeTypeId"
    properties:
      encryptionType:
        type: "string"
        example: "aes-xts-plain64_256"
        description: "Type encryption of volume"
      imageId:
        type: "string"
        example: "img-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of image"
      name:
        type: "string"
        example: "Server_01"
        description: "Name of the server"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      size:
        type: "integer"
        format: "int32"
        example: 20
        description: "Size of volume"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      volumeTypeId:
        type: "string"
        example: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of volume type"
    title: "CreateVolumeRequest"
    description: "Create Volume Request"
    example:
      imageId: "img-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      size: 20
      volumeTypeId: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      encryptionType: "aes-xts-plain64_256"
      name: "Server_01"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  DeleteNetworkRequest:
    type: "object"
    required:
    - "networkId"
    properties:
      extra:
        type: "object"
        properties: {}
      networkId:
        type: "string"
        example: "net-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Network to be deleted."
    title: "DeleteNetworkRequest"
  DeleteSecurityGroupRequest:
    type: "object"
    required:
    - "secgroupId"
    properties:
      extra:
        type: "object"
        properties: {}
      secgroupId:
        type: "string"
        example: "secg-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Secgroup to be deleted."
    title: "DeleteSecurityGroupRequest"
  DeleteSecurityGroupRuleRequest:
    type: "object"
    required:
    - "secgroupRuleId"
    properties:
      extra:
        type: "object"
        properties: {}
      secgroupRuleId:
        type: "string"
        example: "secr-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Secgroup rule to be deleted."
    title: "DeleteSecurityGroupRuleRequest"
  DeleteServerGroupRequest:
    type: "object"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverGroupId:
        type: "string"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "DeleteServerGroupRequest"
  DeleteServerRequest:
    type: "object"
    required:
    - "serverId"
    properties:
      forceDelete:
        type: "boolean"
        example: false
        description: "Skip step move into the trash"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverId:
        type: "string"
        example: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "DeleteServerRequest"
    description: "Delete Server Request"
  DeleteSubnetRequest:
    type: "object"
    required:
    - "networkId"
    - "subnetId"
    properties:
      extra:
        type: "object"
        properties: {}
      networkId:
        type: "string"
        example: "net-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Network to be deleted."
      subnetId:
        type: "string"
        example: "sub-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Subnet to be deleted."
    title: "DeleteSubnetRequest"
  DeleteVolumeRequest:
    type: "object"
    required:
    - "volumeId"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      volumeId:
        type: "string"
        example: "vol-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of volume"
    title: "DeleteVolumeRequest"
    description: "Delete Volume Request"
  DetachVolumeRequest:
    type: "object"
    required:
    - "serverId"
    - "volumeId"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverId:
        type: "string"
        example: "ins-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      volumeId:
        type: "string"
        example: "vol-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of volume"
    title: "DetachVolumeRequest"
    description: "Detach Volume Request"
    example:
      volumeId: "vol-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      serverId: "ins-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      userId: 11212
  EditSecurityGroupRequest:
    type: "object"
    required:
    - "secgroupId"
    properties:
      description:
        type: "string"
      extra:
        type: "object"
        properties: {}
      name:
        type: "string"
      secgroupId:
        type: "string"
        example: "secg-e454fde0-de12-4f70-a5e6-2d904b850fa3"
        description: "Id of Secgroup to be deleted."
    title: "EditSecurityGroupRequest"
    example:
      secgroupId: "secg-e454fde0-de12-4f70-a5e6-2d904b850fa3"
      extra: "{}"
      name: "name"
      description: "description"
  ElasticIpEntity:
    type: "object"
    properties:
      allocationType:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      deletedAt:
        type: "string"
        format: "date-time"
      displayCreatedAt:
        type: "string"
      elasticIpPackage:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      interfaceNetworkInterface:
        $ref: "#/definitions/InterfaceNetworkInterface"
      interfacePublicIp:
        $ref: "#/definitions/InterfacePublicIp"
      interfacePublicSubnet:
        $ref: "#/definitions/InterfacePublicSubnet"
      name:
        type: "string"
      projectId:
        type: "string"
      status:
        type: "string"
      targetId:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      usageType:
        type: "string"
      userService:
        $ref: "#/definitions/UserService"
      uuid:
        type: "string"
      vpcId:
        type: "string"
      vpcName:
        type: "string"
    title: "ElasticIpEntity"
  Flavor:
    type: "object"
    properties:
      bandwidth:
        type: "integer"
        format: "int32"
      bandwidthUnit:
        type: "string"
      cpu:
        type: "integer"
        format: "int32"
      flavorId:
        type: "string"
      gpu:
        type: "integer"
        format: "int32"
      memory:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      zoneId:
        type: "string"
    title: "Flavor"
  FlavorResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      flavors:
        type: "array"
        items:
          $ref: "#/definitions/Flavor"
      success:
        type: "boolean"
    title: "FlavorResponse"
  FlavorZone:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    title: "FlavorZone"
  FlavorZoneResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      flavorZones:
        type: "array"
        items:
          $ref: "#/definitions/FlavorZone"
      success:
        type: "boolean"
    title: "FlavorZoneResponse"
  ImportSSHKeyRequest:
    type: "object"
    properties:
      name:
        type: "string"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      pubKey:
        type: "string"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "ImportSSHKeyRequest"
  InterfaceNetworkInterface:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      fixedIp:
        type: "string"
      floatingIp:
        type: "string"
      interfaceType:
        type: "string"
      mac:
        type: "string"
      networkUuid:
        type: "string"
      portUuid:
        type: "string"
      product:
        type: "string"
      serverUuid:
        type: "string"
      status:
        type: "string"
      subnetUuid:
        type: "string"
      type:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "InterfaceNetworkInterface"
  InterfaceProjectQuota:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      deletedAt:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      projectId:
        type: "string"
      quota:
        type: "string"
      type:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      used:
        type: "string"
      uuid:
        type: "string"
    title: "InterfaceProjectQuota"
  InterfaceProjectQuotaResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      interfaceProjectQuota:
        $ref: "#/definitions/InterfaceProjectQuota"
      success:
        type: "boolean"
    title: "InterfaceProjectQuotaResponse"
  InterfacePublicIp:
    type: "object"
    properties:
      backendStatus:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      deletedAt:
        type: "string"
        format: "date-time"
      gatewayIp:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      ip:
        type: "string"
      projectId:
        type: "string"
      status:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      vpcBackendId:
        type: "integer"
        format: "int32"
    title: "InterfacePublicIp"
  InterfacePublicSubnet:
    type: "object"
    properties:
      backendStatus:
        type: "string"
      cidr:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      deletedAt:
        type: "string"
        format: "date-time"
      gatewayIp:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      projectId:
        type: "string"
      status:
        type: "string"
      subnetBackendId:
        type: "integer"
        format: "int32"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      vpcBackendId:
        type: "integer"
        format: "int32"
    title: "InterfacePublicSubnet"
  ListRouteTablesResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      routeTables:
        type: "array"
        items:
          $ref: "#/definitions/RouteTableModel"
      success:
        type: "boolean"
    title: "ListRouteTablesResponse"
  Network:
    type: "object"
    properties:
      cidr:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      displayCreatedAt:
        type: "string"
      elasticIpEntities:
        type: "array"
        items:
          $ref: "#/definitions/ElasticIpEntity"
      id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
      subnets:
        type: "array"
        items:
          $ref: "#/definitions/Subnet"
    title: "Network"
  NetworkAclListResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      networkAcls:
        type: "array"
        items:
          $ref: "#/definitions/NetworkAclModel"
      success:
        type: "boolean"
    title: "NetworkAclListResponse"
  NetworkAclModel:
    type: "object"
    properties:
      aclPolicyId:
        type: "string"
      aclPolicyRules:
        type: "array"
        items:
          $ref: "#/definitions/AclPolicyRule"
      createdAt:
        $ref: "#/definitions/Timestamp"
      defaultAcl:
        type: "boolean"
      interfaceNetworkUuid:
        type: "string"
      name:
        type: "string"
      projectUuid:
        type: "string"
      status:
        type: "string"
      subnetAssociationList:
        type: "array"
        items:
          type: "string"
      uuid:
        type: "string"
    title: "NetworkAclModel"
  NetworkAclResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      networkAcl:
        $ref: "#/definitions/NetworkAclModel"
      success:
        type: "boolean"
    title: "NetworkAclResponse"
  NetworkResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      networks:
        type: "array"
        items:
          $ref: "#/definitions/Network"
      success:
        type: "boolean"
    title: "NetworkResponse"
  OSImage:
    type: "object"
    properties:
      flavorZoneIds:
        type: "array"
        items:
          type: "string"
      id:
        type: "string"
      imageType:
        type: "string"
      imageVersion:
        type: "string"
      licence:
        type: "boolean"
    title: "OSImage"
  OSImageBaseResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      images:
        type: "array"
        items:
          $ref: "#/definitions/OSImage"
      success:
        type: "boolean"
    title: "OSImageBaseResponse"
  ProjectInfo:
    type: "object"
    properties:
      projectId:
        type: "string"
      userId:
        type: "integer"
        format: "int32"
    title: "ProjectInfo"
  ProjectResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      projects:
        type: "array"
        items:
          $ref: "#/definitions/ProjectInfo"
      success:
        type: "boolean"
    title: "ProjectResponse"
  Quota:
    type: "object"
    properties:
      description:
        type: "string"
      limit:
        type: "integer"
        format: "int64"
      projectUuid:
        type: "string"
      quotaName:
        type: "string"
      type:
        type: "string"
      used:
        type: "string"
    title: "Quota"
  QuotaResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      quotas:
        type: "array"
        items:
          $ref: "#/definitions/Quota"
      success:
        type: "boolean"
    title: "QuotaResponse"
  ResizeServerRequest:
    type: "object"
    required:
    - "flavorId"
    - "serverId"
    properties:
      flavorId:
        type: "string"
        example: "flav-c41b827e-730a-475f-b181-c0d1c7acc6d4"
        description: "Id of flavor"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverId:
        type: "string"
        example: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "ResizeServerRequest"
    description: "Resize Server Request"
    example:
      flavorId: "flav-c41b827e-730a-475f-b181-c0d1c7acc6d4"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      serverId: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
      userId: 11212
  ResizeVolumeRequest:
    type: "object"
    required:
    - "newSize"
    - "newVolumeTypeId"
    - "volumeId"
    properties:
      newSize:
        type: "integer"
        format: "int32"
        example: 20
        description: "New size of volume"
      newVolumeTypeId:
        type: "string"
        example: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
        description: "Id of new volume type"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
      volumeId:
        type: "string"
        example: "vol-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of volume"
    title: "ResizeVolumeRequest"
    description: "Resize Volume Request"
    example:
      volumeId: "vol-a332cc50-8e24-4a45-ad9f-4136c7358503"
      newSize: 20
      newVolumeTypeId: "vtype-6d30737c-08aa-41f8-8bb1-d486c94ccf69"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  RouteModel:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      destination:
        type: "string"
      routeTableUuid:
        type: "string"
      routingType:
        type: "string"
      status:
        type: "string"
      targetUuid:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "RouteModel"
  RouteTableModel:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      routes:
        type: "array"
        items:
          $ref: "#/definitions/RouteModel"
      status:
        type: "string"
      subnets:
        type: "array"
        items:
          $ref: "#/definitions/Subnet"
      system:
        type: "boolean"
      uuid:
        type: "string"
      vpcUuid:
        type: "string"
    title: "RouteTableModel"
  RouteTableResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      routeTable:
        $ref: "#/definitions/RouteTableModel"
      success:
        type: "boolean"
    title: "RouteTableResponse"
  RouteTableUpdateRouteRequest:
    type: "object"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      routes:
        type: "array"
        description: "The updated routes list of route-table"
        items:
          $ref: "#/definitions/UpdatedRoute"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "RouteTableUpdateRouteRequest"
    example:
      routes:
      - destination: "destination"
        type: "type"
        targetUuid: "targetUuid"
      - destination: "destination"
        type: "type"
        targetUuid: "targetUuid"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  RouteTableUpdateSubnetRequest:
    type: "object"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      subnets:
        type: "array"
        description: "The updated subnet uuid list of route-table"
        items:
          type: "string"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "RouteTableUpdateSubnetRequest"
    example:
      subnets:
      - "subnets"
      - "subnets"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  SDNSshKeyDeleteRequest:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      userId:
        type: "integer"
        format: "int32"
    title: "SDNSshKeyDeleteRequest"
  SSHKey:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      id:
        type: "string"
      name:
        type: "string"
      pubKey:
        type: "string"
      status:
        type: "string"
    title: "SSHKey"
  SSHKeyResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      sshKeys:
        type: "array"
        items:
          $ref: "#/definitions/SSHKey"
      success:
        type: "boolean"
    title: "SSHKeyResponse"
  Secgroup:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      displayCreatedAt:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
      system:
        type: "boolean"
    title: "Secgroup"
  SecgroupResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      secgroups:
        type: "array"
        items:
          $ref: "#/definitions/Secgroup"
      success:
        type: "boolean"
    title: "SecgroupResponse"
  SecgroupRule:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      direction:
        type: "string"
      displayCreatedAt:
        type: "string"
      etherType:
        type: "string"
      id:
        type: "string"
      portRangeMax:
        type: "integer"
        format: "int32"
      portRangeMin:
        type: "integer"
        format: "int32"
      protocol:
        type: "string"
      remoteGroupId:
        type: "string"
      remoteGroupName:
        type: "string"
      remoteIpPrefix:
        type: "string"
      status:
        type: "string"
    title: "SecgroupRule"
  SecgroupRuleResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      secgroupRules:
        type: "array"
        items:
          $ref: "#/definitions/SecgroupRule"
      success:
        type: "boolean"
    title: "SecgroupRuleResponse"
  Server:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      encryptionVolume:
        type: "boolean"
      externalInterfaces:
        type: "array"
        items:
          $ref: "#/definitions/InterfaceNetworkInterface"
      flavorId:
        type: "string"
      imageId:
        type: "string"
      internalInterfaces:
        type: "array"
        items:
          $ref: "#/definitions/InterfaceNetworkInterface"
      licence:
        type: "boolean"
      name:
        type: "string"
      osInfo:
        type: "string"
      serverGroupId:
        type: "string"
      sshKeyName:
        type: "string"
      status:
        type: "string"
      uuid:
        type: "string"
    title: "Server"
  ServerGroup:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      name:
        type: "string"
      policyId:
        type: "string"
      projectId:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "ServerGroup"
  ServerGroupPolicy:
    type: "object"
    properties:
      description:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
      uuid:
        type: "string"
    title: "ServerGroupPolicy"
  ServerGroupPolicyResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      serverGroupPolicies:
        type: "array"
        items:
          $ref: "#/definitions/ServerGroupPolicy"
      success:
        type: "boolean"
    title: "ServerGroupPolicyResponse"
  ServerGroupResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      serverGroups:
        type: "array"
        items:
          $ref: "#/definitions/ServerGroup"
      success:
        type: "boolean"
    title: "ServerGroupResponse"
  ServerResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      servers:
        type: "array"
        items:
          $ref: "#/definitions/Server"
      success:
        type: "boolean"
    title: "ServerResponse"
  Subnet:
    type: "object"
    properties:
      cidr:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      displayCreatedAt:
        type: "string"
      interfaceAclPolicyId:
        type: "string"
      name:
        type: "string"
      networkId:
        type: "string"
      routeTableId:
        type: "string"
      status:
        type: "string"
      subnetId:
        type: "integer"
        format: "int32"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "Subnet"
  SubnetResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      subnets:
        type: "array"
        items:
          $ref: "#/definitions/Subnet"
      success:
        type: "boolean"
    title: "SubnetResponse"
  Timestamp:
    type: "object"
    properties:
      date:
        type: "integer"
        format: "int32"
      day:
        type: "integer"
        format: "int32"
      hours:
        type: "integer"
        format: "int32"
      minutes:
        type: "integer"
        format: "int32"
      month:
        type: "integer"
        format: "int32"
      nanos:
        type: "integer"
        format: "int32"
      seconds:
        type: "integer"
        format: "int32"
      time:
        type: "integer"
        format: "int64"
      timezoneOffset:
        type: "integer"
        format: "int32"
      year:
        type: "integer"
        format: "int32"
    title: "Timestamp"
  UpdateNetworkAclRulesRequest:
    type: "object"
    properties:
      detailAclRuleList:
        type: "array"
        items:
          $ref: "#/definitions/UpdatedAclPolicyRule"
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "UpdateNetworkAclRulesRequest"
    example:
      detailAclRuleList:
      - protocol: "protocol"
        system: true
        port: "port"
        interfaceAclPolicyUuid: "interfaceAclPolicyUuid"
        action: "action"
        seqNumber: 0
        source: "source"
        type: "type"
      - protocol: "protocol"
        system: true
        port: "port"
        interfaceAclPolicyUuid: "interfaceAclPolicyUuid"
        action: "action"
        seqNumber: 0
        source: "source"
        type: "type"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  UpdateNetworkAclSubnetsRequest:
    type: "object"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      subnetUuids:
        type: "array"
        description: "The updated subnets uuid list of network-acl"
        items:
          type: "string"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "UpdateNetworkAclSubnetsRequest"
    example:
      subnetUuids:
      - "subnetUuids"
      - "subnetUuids"
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  UpdateNetworkRequest:
    type: "object"
    properties:
      extra:
        type: "object"
        properties: {}
      name:
        type: "string"
      networkId:
        type: "string"
    title: "UpdateNetworkRequest"
    example:
      extra: "{}"
      name: "name"
      networkId: "networkId"
  UpdateQuota:
    type: "object"
    properties:
      projectId:
        type: "integer"
        format: "int64"
      quota:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
    title: "UpdateQuota"
    example:
      quota:
        key: "{}"
      projectId: 0
  UpdateQuotaVsgRequest:
    type: "object"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      updateQuota:
        $ref: "#/definitions/UpdateQuota"
      updateQuotaRequest:
        $ref: "#/definitions/UpdateQuota"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "UpdateQuotaVsgRequest"
    example:
      updateQuota:
        quota:
          key: "{}"
        projectId: 0
      updateQuotaRequest:
        quota:
          key: "{}"
        projectId: 0
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      userId: 11212
  UpdateServerRequest:
    type: "object"
    required:
    - "serverId"
    properties:
      projectId:
        type: "string"
        example: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
        description: "Id of project"
      serverId:
        type: "string"
        example: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
        description: "Id of server"
      userId:
        type: "integer"
        format: "int32"
        example: 11212
        description: "Id of user"
    title: "UpdateServerRequest"
    description: "Update Server Request"
    example:
      projectId: "pro-4f8bd2b0-a4e7-4fc9-b798-7053e965ba08"
      serverId: "ins-a332cc50-8e24-4a45-ad9f-4136c7358503"
      userId: 11212
  UpdatedAclPolicyRule:
    type: "object"
    properties:
      action:
        type: "string"
      interfaceAclPolicyUuid:
        type: "string"
      port:
        type: "string"
      protocol:
        type: "string"
      seqNumber:
        type: "integer"
        format: "int32"
      source:
        type: "string"
      system:
        type: "boolean"
      type:
        type: "string"
    title: "UpdatedAclPolicyRule"
    example:
      protocol: "protocol"
      system: true
      port: "port"
      interfaceAclPolicyUuid: "interfaceAclPolicyUuid"
      action: "action"
      seqNumber: 0
      source: "source"
      type: "type"
  UpdatedRoute:
    type: "object"
    properties:
      destination:
        type: "string"
      targetUuid:
        type: "string"
      type:
        type: "string"
    title: "UpdatedRoute"
    example:
      destination: "destination"
      type: "type"
      targetUuid: "targetUuid"
  UserService:
    type: "object"
    properties:
      artifactId:
        type: "string"
      artifactName:
        type: "string"
      artifactType:
        type: "string"
      createdTime:
        type: "integer"
        format: "int64"
      createdTimeFmt:
        type: "string"
      endBillingTime:
        type: "integer"
        format: "int64"
      endTimeFmt:
        type: "string"
      isPoc:
        type: "boolean"
      monthlyCost:
        type: "number"
        format: "double"
      startBillingTime:
        type: "integer"
        format: "int64"
      startTimeFmt:
        type: "string"
      trial:
        type: "boolean"
      userServiceId:
        type: "integer"
        format: "int32"
    title: "UserService"
  Volume:
    type: "object"
    properties:
      bootable:
        type: "boolean"
      createdAt:
        type: "string"
        format: "date-time"
      encryptionType:
        type: "string"
      name:
        type: "string"
      projectId:
        type: "string"
      serverId:
        type: "string"
      size:
        type: "integer"
        format: "int32"
      status:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      volumeTypeId:
        type: "string"
    title: "Volume"
  VolumeResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      success:
        type: "boolean"
      volumes:
        type: "array"
        items:
          $ref: "#/definitions/Volume"
    title: "VolumeResponse"
  VolumeType:
    type: "object"
    properties:
      id:
        type: "string"
      iops:
        type: "integer"
        format: "int32"
      maxSize:
        type: "integer"
        format: "int32"
      minSize:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      throughPut:
        type: "integer"
        format: "int32"
      zoneId:
        type: "string"
    title: "VolumeType"
  VolumeTypeResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      success:
        type: "boolean"
      volumeTypes:
        type: "array"
        items:
          $ref: "#/definitions/VolumeType"
    title: "VolumeTypeResponse"
  VolumeTypeZone:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    title: "VolumeTypeZone"
  VolumeTypeZoneResponse:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        format: "int32"
      errorMsg:
        type: "string"
      extra:
        type: "object"
        properties: {}
      success:
        type: "boolean"
      volumeTypeZones:
        type: "array"
        items:
          $ref: "#/definitions/VolumeTypeZone"
    title: "VolumeTypeZoneResponse"
